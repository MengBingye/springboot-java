####################传统数据配置方式
# 配置数据连接
# spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/demo?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false
#    username: root
#    password: 123456
#    driver-class-name: com.mysql.cj.jdbc.Driver


###################alibaba.druid

spring:
  datasource:
    #主数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/demo?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&autoReconnect=true&failOverReadOnly=false
    username: root
    password: 123456

    #连接池的配置
    initialSize: 5
    minIdle: 5
    maxActive: 20

    #连接等待超时时间
    maxWait: 60000
    #配置隔多久进行一次监测(监测可以关闭的空闲连接)
    timeBetweenEvictionRunsMillis: 60000
    #配置连接池中最小的生存空间
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    #打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

    mvc.throw-exception-if-no-handler-found: true
    spring.resources.add-mappings: false



logging:
  level:
    com.slabs.springbootjava.dao: DEBUG

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params=count: countSql
  page-size-zero: true


mapper:
  mappers: com.slabs.springbootjava.core.universal.Mapper